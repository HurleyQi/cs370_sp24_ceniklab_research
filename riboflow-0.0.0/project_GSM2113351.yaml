# N E X T F L O W 
##########################################################################
#####   SAMPLE RIBOFLOW ARGUMENTS FILE WITH RNASEQ AND METADATA   ########
########################################################################## 

# Tested on  version 19.04.1

# Perform fastqc at several stages of the pipeline
do_fastqc: true

# Check existnece of fastq.gz files and bowtie2 reference files 
do_check_file_existence : true

# Remove duplicate reads based on their length
# and mapped position
deduplicate: false

# # Remove duplicate reads based on their length
# # and mapped position
# dedup_method: "umi_tools"

# umi_tools_extract_arguments: "-p \"^(?P<umi_1>.{12})(?P<discard_1>.{4}).+$\" --extract-method=regex"
# umi_tools_dedup_arguments:   "--read-length"

# If you have RNA-Seq data additionally, 
# that you want to pair with your ribosome profiling data,
# you can set this flag to true 
# AND PROVIDE RNA-Seq data
# under the key rnaseq in this file. See below.
# If you don't have RNA-Seq data, set this flag to false
do_rnaseq: true

# If you don't have metadata set do_metadata to false.
# If you have metadata, provide yaml files for the experiments
# under input -> metadata below. 
do_metadata: false

# These arguments are used for clipping adapters by cutadapt.
# (see https://cutadapt.readthedocs.io/en/stable/guide.html )
# Note that we had to adjust the minimum and maximum lengths 
# because we are trimming the UMIs after CLIPPING adapters.
clip_arguments: ' -a TGGAATTCTCGGGTGCCAAGG --overlap=4 --trimmed-only --maximum-length=40 --minimum-length=21 --quality-cutoff=28'

# If you don't want to perform and adapter clipping, 
# you can comment the above option and use the option below.   
#clip_arguments: '--quality-cutoff=0'

# Transcriptome alignments are filtered based on mapping quality.
# This is the threshold that the alignments need to pass for
# downstream quantification
mapping_quality_cutoff: 2

###############################################################################
# Arguments for the aligner for 
# corresponding steps
alignment_arguments:
   # bowtie2 arguments for rtRNA filtering step
   filter:        '-L 15 --no-unal --norc'
   
   # bowtie2 arguments for transcriptome alignment step
   transcriptome: '-L 15 --norc --no-unal'
   
   # hisat2 arguments
   # use -k 1 so that each aligned read is reported once.
   # otherwise, our read length analysis values might be inflated. 
   genome: '--no-unal -k 1'

###############################################################################
# RiboPy parameters for ribo file generation.
ribo:
    ref_name:        "appris-v1"
    metagene_radius: 50
    left_span:       35
    right_span:      10
    read_length:
       min: 21
       max: 40
    coverage: true
   
###############################################################################
# Output folder settings
# These entries typically don't need modifications.
# Note that everything is placed as a subfolder under the *base* folder
# *base* gives the actual folder location
# The other parameters are folder names that are going to be under the *base* 
output:
   individual_lane_directory: 'individual'
   merged_lane_directory: 'merged'
   intermediates: 
      # base is the root folder for the intermediate files
      base: 'intermediates_GSM2113351'
      clip: 'clip'
      log: 'log'
      transcriptome_alignment: 'transcriptome_alignment'
      filter: 'filter'
      genome_alignment: 'genome_alignment'
      bam_to_bed: 'bam_to_bed'
      quality_filter: 'quality_filter'
      genome_alignment: 'genome_alignment'
      # alignment_ribo folder contains the bed files
      # that are used as input to RiboPy to create ribo files.
      alignment_ribo: 'alignment_ribo'
   output: 
      # base is the root folder for the output files
      base: 'output_GSM2113351'
      log: 'log_GSM2113351'
      fastqc: 'fastqc_GSM2113351'
      ribo: 'ribo_GSM2113351'
      
###############################################################################
# In this exapmle we have two experiments with the names  
# GSM1606107 and GSM1606108
# These names are first introduced when providing fastq files 
# for ribosome profiling data. (input -> fastq -> GSM1606107) and (input -> fastq -> GSM1606108)
# 
# If metadata or RNA-Seq data are provided, they must match these names
# See below as an example. 


input:
   reference:
   # filter indicates bowtie2 index files
   # * is used as a wild card to match all bowtie2 index files:
   # human_rtRNA.1.bt2, human_rtRNA.2.bt2, ....
      filter: /work/09855/hurleyqi/ls6/cs370_sp24_ceniklab_research/reference_caenorhabditis-elegans-main/filter/celegans/celegans_rRNA_new*

      # transcriptome indicates bowtie2 index files
      # Generated from isoform sequences.
      transcriptome: /work/09855/hurleyqi/ls6/cs370_sp24_ceniklab_research/reference_caenorhabditis-elegans-main/transcriptome/celegans/appris_celegans_v1_new*

      # Main annotation file.
      # CDS and UTR regions are defined in this file.
      regions: /work/09855/hurleyqi/ls6/cs370_sp24_ceniklab_research/reference_caenorhabditis-elegans-main/transcriptome/celegans/appris_celegans_v1_actual_regions_new.bed

      # Transcript lengths
      transcript_lengths: /work/09855/hurleyqi/ls6/cs370_sp24_ceniklab_research/reference_caenorhabditis-elegans-main/transcriptome/celegans/appris_celegans_v1_transcript_lengths_new.tsv
      
      ## Genome Alignment Reference
      # Sequences that are NOT aligneod to the transcriptome 
      # are mapped to the genome
      # This parameter (and the corresponding step) is optional.
      # Comment the line below to skip this step
      # genome: /data/genomic_ref/human/hisat/grch38_snp_tran/genome_snp_tran*
      
      # Reads NOT aligned to the genome are mapped to this reference
      # This parameter (and the corresponding step) is optional.
      # Comment the line below to skip this step
      #post_genome: ./rf_sample_data/post_genome/post_genome*

   # This will be prefixed to the file paths below
   # You can leave it as empty "" if you provide complete paths.
   fastq_base: ""
   fastq:
       # We have two ribosome profiling experiments called 
       # GSM1606107  and  GSM1606108
      GSM2113351:
         - /work/09855/hurleyqi/ls6/exp_five/SRR3356478.fastq.gz
      

   ## INPUTS BELOW THIS LINE ARE POTIONAL
   
   # This is the metadata file stored at the root ribo file
   # In this example, we are storing this yaml file    
   # Any valid yaml file can be stored as metadata.
   root_meta: "./project_GSM2113351.yaml"   
###############################################################################
# If you have no RNA-Seq data to process,
# remove "rnaseq" node from this yaml tree  
rnaseq:
 clip_arguments: '-a TGGAATTCTCGGGTGCCAAGG --quality-cutoff=28'
 
 # This will be prefixed to the file paths below
 # You can leave it as empty "" if you provide complete paths.
 fastq_base: ""
 
 deduplicate: true
 filter_arguments: '-L 15 --no-unal'
 bt2_argumments: "-L 15  --no-unal"
 
 # Keys must match the experiment names for the ribosome profiling data
 # In this particular example, valid keys are
 # GSM1606107 an d GSM1606108 
 fastq:
   GSM2113351:
      - /work/09855/hurleyqi/ls6/exp_five/SRR3356597.fastq.gz
      - /work/09855/hurleyqi/ls6/exp_five/SRR3356598.fastq.gz